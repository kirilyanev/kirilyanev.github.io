{"ast":null,"code":"var _jsxFileName = \"/home/kiko/Desktop/Softuni/GitHub/Personal-page/my-page/src/components/Project/Project.js\";\n// import './Project.css';\n\n// function Project(props) {\n\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n\n//         // Declare a state variable named 'count' with an initial value of 0\n//         const [isClicked, setIsClicked] = useState(false);\n\n//         // This function increments the count when the button is clicked\n//         const toggleClick = () => {\n//             setIsClicked(!isClicked);\n//         };\n\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n\n//                     <button onClick={toggleClick}>\n//                         {isClicked ? 'Hide' : 'Show more'}\n//                     </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//                 <button onClick={props.toggleClick}>\n//                     {props.isClicked ? 'Hide' : 'Show more'}\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//                 <button onClick={props.toggleClick}>\n//                     {props.isClicked ? 'Hide' : 'Show more'}\n//                 </button>\n//             </div>\n//             {/* Conditionally render additional project info */}\n//             {props.isClicked && (\n//                 <aside className=\"project-details\">\n//                     {/* Add your additional project details here */}\n//                     <h2>Additional Details</h2>\n//                     <p>Any additional information about the project goes here.</p>\n//                 </aside>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//                 <button onClick={props.toggleClick}>\n//                     {props.isClicked ? 'Hide' : 'Show more'}\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\nimport React, { useState } from 'react';\nimport './Project.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Project(props) {\n  const url = props.url;\n  const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath,\n      alt: props.alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"project-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: props.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.toggleClick,\n        children: props.isClicked ? 'Hide' : 'Show more'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), props.isClicked && /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"project-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Additional Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Any additional information about the project goes here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Project","props","url","imagePath","process","env","PUBLIC_URL","image","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","name","description","href","target","rel","onClick","toggleClick","isClicked","_c","$RefreshReg$"],"sources":["/home/kiko/Desktop/Softuni/GitHub/Personal-page/my-page/src/components/Project/Project.js"],"sourcesContent":["// import './Project.css';\n\n// function Project(props) {\n\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n\n//         // Declare a state variable named 'count' with an initial value of 0\n//         const [isClicked, setIsClicked] = useState(false);\n\n//         // This function increments the count when the button is clicked\n//         const toggleClick = () => {\n//             setIsClicked(!isClicked);\n//         };\n\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n\n\n//                     <button onClick={toggleClick}>\n//                         {isClicked ? 'Hide' : 'Show more'}\n//                     </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n\n\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//                 <button onClick={props.toggleClick}>\n//                     {props.isClicked ? 'Hide' : 'Show more'}\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//                 <button onClick={props.toggleClick}>\n//                     {props.isClicked ? 'Hide' : 'Show more'}\n//                 </button>\n//             </div>\n//             {/* Conditionally render additional project info */}\n//             {props.isClicked && (\n//                 <aside className=\"project-details\">\n//                     {/* Add your additional project details here */}\n//                     <h2>Additional Details</h2>\n//                     <p>Any additional information about the project goes here.</p>\n//                 </aside>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n\n\n\n// import React, { useState } from 'react';\n// import './Project.css';\n\n// function Project(props) {\n//     const url = props.url;\n//     const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n//     return (\n//         <div className='project'>\n//             <img src={imagePath} alt={props.alt} />\n//             <div id='project-info'>\n//                 <p>{props.name}</p>\n//                 <p>{props.description}</p>\n//                 <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n//                 <button onClick={props.toggleClick}>\n//                     {props.isClicked ? 'Hide' : 'Show more'}\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Project;\n\n\n\nimport React, { useState } from 'react';\nimport './Project.css';\n\nfunction Project(props) {\n    const url = props.url;\n    const imagePath = process.env.PUBLIC_URL + '/' + props.image;\n\n    return (\n        <div className='project'>\n            <img src={imagePath} alt={props.alt} />\n            <div id='project-info'>\n                <p>{props.name}</p>\n                <p>{props.description}</p>\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{props.url}</a>\n                <button onClick={props.toggleClick}>\n                    {props.isClicked ? 'Hide' : 'Show more'}\n                </button>\n            </div>\n            {/* Conditionally render additional project info */}\n            {props.isClicked && (\n                <aside className=\"project-details\">\n                    {/* Add your additional project details here */}\n                    <h2>Additional Details</h2>\n                    <p>Any additional information about the project goes here.</p>\n                </aside>\n            )}\n        </div>\n    );\n}\n\nexport default Project;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}