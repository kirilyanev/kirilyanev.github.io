{"ast":null,"code":"var _jsxFileName = \"/home/kiko/Desktop/Softuni/GitHub/Personal-page/my-page/src/components/ProjectList/ProjectList.js\";\n// import { Component } from \"react\";\n// import Project from \"../Project/Project.js\";\n\n// import projects from \"../../data/projectsData.js\";\n\n// class ProjectList extends Component {\n\n//     render () {\n//         // projects.map(project => console.log(project));\n//         return (\n//             <ul className=\"project-list\">\n\n//                 {projects.map(project => {\n//                     return <Project name={project.name} image={project.image} alt={project.alt} url={project.url} description={project.description}/>;\n//                 })}\n\n//             </ul>\n//         );\n//     }\n// }\n\n// export default ProjectList;\n\n// import { Component } from \"react\";\n// import Project from \"../Project/Project.js\";\n// import './ProjectList.css';\n\n// import projects from \"../../data/projectsData.js\";\n\n// class ProjectList extends Component {\n//     constructor(props) {\n//         super(props);\n//     }\n\n//     render () {\n//         console.log(this.props);\n//         // projects.map(project => console.log(project));\n//         return (\n//             <ul className=\"project-list\">\n\n//                 {projects.map((project, index) => {\n//                     return <Project\n//                     key={index}\n//                     name={project.name} \n//                     image={project.image}\n//                     alt={project.alt}\n//                     url={project.url}\n//                     description={project.description}\n//                     />;\n//                 })}\n\n//             </ul>\n//         );\n//     }\n// }\n\n// export default ProjectList;\n\n// import React, { Component } from \"react\";\n// import Project from \"../Project/Project.js\";\n// import './ProjectList.css';\n// import projects from \"../../data/projectsData.js\";\n\n// class ProjectList extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         // Initialize an array to keep track of the clicked state for each project\n//         const projectClickedStates = Array(projects.length).fill(false);\n\n//         this.state = {\n//             projectClickedStates: projectClickedStates,\n//         };\n//     }\n\n//     // Function to toggle the \"Show more\"/\"Hide\" state for a project\n//     toggleClick = (index) => {\n//         const { projectClickedStates } = this.state;\n//         projectClickedStates[index] = !projectClickedStates[index];\n//         this.setState({ projectClickedStates });\n//     };\n\n//     render() {\n//         return (\n//             <ul className=\"project-list\">\n//                 {projects.map((project, index) => {\n//                     return (\n//                         <Project\n//                             key={index}\n//                             name={project.name}\n//                             image={project.image}\n//                             alt={project.alt}\n//                             url={project.url}\n//                             description={project.description}\n//                             isClicked={this.state.projectClickedStates[index]}\n//                             toggleClick={() => this.toggleClick(index)}\n//                         />\n//                     );\n//                 })}\n//             </ul>\n//         );\n//     }\n// }\n\n// export default ProjectList;\n\nimport React, { Component } from \"react\";\nimport Project from \"../Project/Project.js\";\nimport './ProjectList.css';\nimport projects from \"../../data/projectsData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize an array to keep track of the clicked state for each project\n    // Function to toggle the \"Show more\"/\"Hide\" state for a project\n    this.toggleClick = index => {\n      const {\n        projectClickedStates\n      } = this.state;\n      projectClickedStates[index] = !projectClickedStates[index];\n      this.setState({\n        projectClickedStates\n      });\n    };\n    const _projectClickedStates = Array(projects.length).fill(false);\n    this.state = {\n      projectClickedStates: _projectClickedStates\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"project-list\",\n      children: projects.map((project, index) => {\n        return /*#__PURE__*/_jsxDEV(Project, {\n          project: project // Pass the entire project object here\n          ,\n\n          name: project.name,\n          image: project.image,\n          alt: project.alt,\n          url: project.url,\n          description: project.description,\n          isClicked: this.state.projectClickedStates[index],\n          toggleClick: () => this.toggleClick(index),\n          handleProjectClick: this.props.handleProjectClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ProjectList;\n\n// key={index}\n// name={project.name}\n// image={project.image}\n// alt={project.alt}\n// url={project.url}\n// description={project.description}\n// isClicked={this.state.projectClickedStates[index]}\n// toggleClick={() => this.toggleClick(index)}\n// handleProjectClick={() => this.props.handleProjectClick(index)} // Pass the function here","map":{"version":3,"names":["React","Component","Project","projects","jsxDEV","_jsxDEV","ProjectList","constructor","props","toggleClick","index","projectClickedStates","state","setState","Array","length","fill","render","className","children","map","project","name","image","alt","url","description","isClicked","handleProjectClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/kiko/Desktop/Softuni/GitHub/Personal-page/my-page/src/components/ProjectList/ProjectList.js"],"sourcesContent":["// import { Component } from \"react\";\n// import Project from \"../Project/Project.js\";\n\n// import projects from \"../../data/projectsData.js\";\n\n\n// class ProjectList extends Component {\n\n//     render () {\n//         // projects.map(project => console.log(project));\n//         return (\n//             <ul className=\"project-list\">\n\n//                 {projects.map(project => {\n//                     return <Project name={project.name} image={project.image} alt={project.alt} url={project.url} description={project.description}/>;\n//                 })}\n\n//             </ul>\n//         );\n//     }\n// }\n\n// export default ProjectList;\n\n\n\n\n// import { Component } from \"react\";\n// import Project from \"../Project/Project.js\";\n// import './ProjectList.css';\n\n// import projects from \"../../data/projectsData.js\";\n\n\n// class ProjectList extends Component {\n//     constructor(props) {\n//         super(props);\n//     }\n\n//     render () {\n//         console.log(this.props);\n//         // projects.map(project => console.log(project));\n//         return (\n//             <ul className=\"project-list\">\n\n//                 {projects.map((project, index) => {\n//                     return <Project\n//                     key={index}\n//                     name={project.name} \n//                     image={project.image}\n//                     alt={project.alt}\n//                     url={project.url}\n//                     description={project.description}\n//                     />;\n//                 })}\n\n//             </ul>\n//         );\n//     }\n// }\n\n// export default ProjectList;\n\n\n// import React, { Component } from \"react\";\n// import Project from \"../Project/Project.js\";\n// import './ProjectList.css';\n// import projects from \"../../data/projectsData.js\";\n\n// class ProjectList extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         // Initialize an array to keep track of the clicked state for each project\n//         const projectClickedStates = Array(projects.length).fill(false);\n\n//         this.state = {\n//             projectClickedStates: projectClickedStates,\n//         };\n//     }\n\n//     // Function to toggle the \"Show more\"/\"Hide\" state for a project\n//     toggleClick = (index) => {\n//         const { projectClickedStates } = this.state;\n//         projectClickedStates[index] = !projectClickedStates[index];\n//         this.setState({ projectClickedStates });\n//     };\n\n//     render() {\n//         return (\n//             <ul className=\"project-list\">\n//                 {projects.map((project, index) => {\n//                     return (\n//                         <Project\n//                             key={index}\n//                             name={project.name}\n//                             image={project.image}\n//                             alt={project.alt}\n//                             url={project.url}\n//                             description={project.description}\n//                             isClicked={this.state.projectClickedStates[index]}\n//                             toggleClick={() => this.toggleClick(index)}\n//                         />\n//                     );\n//                 })}\n//             </ul>\n//         );\n//     }\n// }\n\n// export default ProjectList;\n\n\n\nimport React, { Component } from \"react\";\nimport Project from \"../Project/Project.js\";\nimport './ProjectList.css';\nimport projects from \"../../data/projectsData.js\";\n\nclass ProjectList extends Component {\n    constructor(props) {\n        super(props);\n\n        // Initialize an array to keep track of the clicked state for each project\n        const projectClickedStates = Array(projects.length).fill(false);\n\n        this.state = {\n            projectClickedStates: projectClickedStates,\n        };\n    }\n\n    // Function to toggle the \"Show more\"/\"Hide\" state for a project\n    toggleClick = (index) => {\n        const { projectClickedStates } = this.state;\n        projectClickedStates[index] = !projectClickedStates[index];\n        this.setState({ projectClickedStates });\n    };\n\n    render() {\n        return (\n            <ul className=\"project-list\">\n                {projects.map((project, index) => {\n                    return (\n                        <Project\n                            project={project} // Pass the entire project object here\n                            key={index}\n                            name={project.name}\n                            image={project.image}\n                            alt={project.alt}\n                            url={project.url}\n                            description={project.description}\n                            isClicked={this.state.projectClickedStates[index]}\n                            toggleClick={() => this.toggleClick(index)}\n                            handleProjectClick={this.props.handleProjectClick}\n                        />\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nexport default ProjectList;\n\n\n\n\n\n\n// key={index}\n// name={project.name}\n// image={project.image}\n// alt={project.alt}\n// url={project.url}\n// description={project.description}\n// isClicked={this.state.projectClickedStates[index]}\n// toggleClick={() => this.toggleClick(index)}\n// handleProjectClick={() => this.props.handleProjectClick(index)} // Pass the function here"],"mappings":";AAAA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAO,mBAAmB;AAC1B,OAAOC,QAAQ,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,SAASL,SAAS,CAAC;EAChCM,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;;IAEZ;IAQJ;IAAA,KACAC,WAAW,GAAIC,KAAK,IAAK;MACrB,MAAM;QAAEC;MAAqB,CAAC,GAAG,IAAI,CAACC,KAAK;MAC3CD,oBAAoB,CAACD,KAAK,CAAC,GAAG,CAACC,oBAAoB,CAACD,KAAK,CAAC;MAC1D,IAAI,CAACG,QAAQ,CAAC;QAAEF;MAAqB,CAAC,CAAC;IAC3C,CAAC;IAZG,MAAMA,qBAAoB,GAAGG,KAAK,CAACX,QAAQ,CAACY,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAE/D,IAAI,CAACJ,KAAK,GAAG;MACTD,oBAAoB,EAAEA;IAC1B,CAAC;EACL;EASAM,MAAMA,CAAA,EAAG;IACL,oBACIZ,OAAA;MAAIa,SAAS,EAAC,cAAc;MAAAC,QAAA,EACvBhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAEX,KAAK,KAAK;QAC9B,oBACIL,OAAA,CAACH,OAAO;UACJmB,OAAO,EAAEA,OAAQ,CAAC;UAAA;;UAElBC,IAAI,EAAED,OAAO,CAACC,IAAK;UACnBC,KAAK,EAAEF,OAAO,CAACE,KAAM;UACrBC,GAAG,EAAEH,OAAO,CAACG,GAAI;UACjBC,GAAG,EAAEJ,OAAO,CAACI,GAAI;UACjBC,WAAW,EAAEL,OAAO,CAACK,WAAY;UACjCC,SAAS,EAAE,IAAI,CAACf,KAAK,CAACD,oBAAoB,CAACD,KAAK,CAAE;UAClDD,WAAW,EAAEA,CAAA,KAAM,IAAI,CAACA,WAAW,CAACC,KAAK,CAAE;UAC3CkB,kBAAkB,EAAE,IAAI,CAACpB,KAAK,CAACoB;QAAmB,GAR7ClB,KAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASb,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEb;AACJ;AAEA,eAAe1B,WAAW;;AAO1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}